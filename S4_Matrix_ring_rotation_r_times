M, N, R = map(int, input().split())
matrix = [list(map(int, input().split())) for _ in range(M)]

for layer in range(min(M, N) // 2):
   
    ring = (
        matrix[layer][layer:N-layer] +
        [matrix[i][N-layer-1] for i in range(layer+1, M-layer-1)] +
        matrix[M-layer-1][layer:N-layer][::-1] +
        [matrix[i][layer] for i in range(M-layer-2, layer, -1)]
    )

 
    shift = R % len(ring)
    ring = ring[shift:] + ring[:shift]
    
    
    index = 0
    for col in range(layer, N-layer):
        matrix[layer][col] = ring[index]
        index += 1
    for row in range(layer+1, M-layer-1):
        matrix[row][N-layer-1] = ring[index]
        index += 1
    for col in range(N-layer-1, layer-1, -1):
        matrix[M-layer-1][col] = ring[index]
        index += 1
    for row in range(M-layer-2, layer, -1):
        matrix[row][layer] = ring[index]
        index += 1

for row in matrix:
    print(*row)











"""
You are given a 2D matrix, a, of dimension MxN and a positive integer R.
You have to rotate each ring of the matrix R times and print the resultant matrix.
Rotation should be in anti-clockwise.
Input Format

First line contains three space separated integers, M,N and R,
where M is the number of rows,
 N is the number of columns in matrix, and
 R is the number of times the matrix has to be rotated.
Then M lines follow,
where each line contains N space separated positive integers.
These M lines represent the matix.
Output Format

 In output print rotated matrix.
Sample Input 1

2 3 2
1 2 3
4 5 6
Sample Output 1

3 6 5 
2 1 4 
Sample Input 2

4 4 1 
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
Sample Output 2

2 3 4 8 
1 7 11 12 
5 6 10 16
9 13 14 15
For example:

Input	
2 3 2
1 2 3
4 5 6
Result
3 6 5 
2 1 4 

input 
4 4 1 
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
output 
2 3 4 8 
1 7 11 12 
5 6 10 16 
9 13 14 15 
"""
