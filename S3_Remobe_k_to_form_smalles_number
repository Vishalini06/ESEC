n=list(map(int,input()))
k=int(input())
res=[]

for dig in n:
   while k>0 and res and res[-1]>dig:
        res.pop()
        k-=1
   res.append(dig) 

res=res[:len(res)-k]
res=[str(i) for i in res]
out="".join(res).lstrip("0")
print(out)


"""
Given a non-negative integer num represented as a string, remove any k (need not be consecutive numbers) digits from the number so that the new number is the smallest possible.

Note:

The length of num is less than 10002 and will be â‰¥ k.
The given num does not contain any leading zero.
Example 1:

Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.
Example 2:

Input: num = "10200", k = 1
Output: "200"
Explanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.
Example 3:

Input: num = "10", k = 2
Output: "0"

"""
